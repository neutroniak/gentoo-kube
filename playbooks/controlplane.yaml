---
  - name: "install and upgrade packages"
    hosts: controlplane
    become: yes
    tasks:
    - name: "include vars"
      include_vars:
        file: "../config.yaml"
        name: "kconf"
    - name: "update"
      community.general.portage:
        package: '@world'
        update: yes
        deep: yes
        newuse: yes
        changed_use: yes
    - name: "depclean"
      community.general.portage:
        depclean: yes
    - name: "kube api server"
      package:
        name: kube-apiserver
        state: installed
    - name: "kube controller manager"
      package:
        name: kube-controller-manager
        state: installed
    - name: "kube-scheduler"
      package:
        name: kube-scheduler
        state: installed
    - name: "kube-scheduler"
      package:
        name: kube-scheduler
        state: installed
    - name: "etcd"
      package:
        name: etcd
        state: installed
    - name: "kubectl"
      package:
        name: kubectl
        state: installed

    - name: "check pki dir"
      stat:
        path: "/etc/kubernetes/pki"
      register: has_pki

    - name: "check pki dir"
      include_tasks: certs.yaml
      when: not has_pki.stat.exists

    - name: "Copy conf.d files"
      copy:
        src: "{{ item.src }}"
        dest: "/etc/conf.d"
      with_items:
        - {"src":"../resources/conf.d/kube-apiserver"}
        - {"src":"../resources/conf.d/kube-controller-manager"}
        - {"src":"../resources/conf.d/kube-scheduler"}
        - {"src":"../resources/conf.d/etcd"}

    - name: "Replace IP"
      replace:
        path: "{{ item.path }}"
        regexp: "{INSTANCE_IP}"
        replace: "{{ansible_default_ipv4.address}}"
      with_items:
        - {"path":"/etc/conf.d/kube-apiserver"}
        - {"path":"/etc/conf.d/kube-controller-manager"}
        - {"path":"/etc/conf.d/kube-scheduler"}
        - {"path":"/etc/conf.d/etcd"}

    - name: "Replace Cluster CIDR"
      replace:
        path: "{{ item.path }}"
        regexp: "{CLUSTER_CIDR}"
        replace: "{{kconf.cluster_cidr}}"
      with_items:
        - {"path":"/etc/conf.d/kube-apiserver"}
        - {"path":"/etc/conf.d/kube-controller-manager"}
        - {"path":"/etc/conf.d/kube-scheduler"}
        - {"path":"/etc/conf.d/etcd"}

    - name: "Replace Service CIDR"
      replace:
        path: "{{ item.path }}"
        regexp: "{SERVICE_CIDR}"
        replace: "{{kconf.service_cidr}}"
      with_items:
        - {"path":"/etc/conf.d/kube-apiserver"}
        - {"path":"/etc/conf.d/kube-controller-manager"}
        - {"path":"/etc/conf.d/kube-scheduler"}
        - {"path":"/etc/conf.d/etcd"}

    - name: "Replace Hostname"
      replace:
        path: "{{ item.path }}"
        regexp: "{HOSTNAME}"
        replace: "{{ansible_hostname}}"
      with_items:
        - {"path":"/etc/conf.d/kube-apiserver"}
        - {"path":"/etc/conf.d/kube-controller-manager"}
        - {"path":"/etc/conf.d/kube-scheduler"}
        - {"path":"/etc/conf.d/etcd"}

    - name: "Replace Cluster Name"
      replace:
        path: "{{ item.path }}"
        regexp: "{CLUSTER_NAME}"
        replace: "{{kconf.cluster_name}}"
      with_items:
        - {"path":"/etc/conf.d/kube-apiserver"}
        - {"path":"/etc/conf.d/kube-controller-manager"}
        - {"path":"/etc/conf.d/kube-scheduler"}
        - {"path":"/etc/conf.d/etcd"}

    - name: "Replace API Endpoint"
      replace:
        path: "{{ item.path }}"
        regexp: "{API_ENDPOINT}"
        replace: "{{kconf.api_endpoint}}"
      with_items:
        - {"path":"/etc/conf.d/kube-apiserver"}
        - {"path":"/etc/conf.d/kube-controller-manager"}
        - {"path":"/etc/conf.d/kube-scheduler"}

    # admin kubeconfigs
    - name: "admin kubeconfig"
      shell: "kubectl config set-cluster {{kconf.cluster_name}} --certificate-authority=/etc/kubernetes/pki/ca.crt --embed-certs=true --server=https://{{kconf.api_endpoint}}:6443 --kubeconfig=/etc/kubernetes/admin.kubeconfig"
    - name: "admin kubeconfig"
      shell: "kubectl config set-credentials admin --client-certificate=/etc/kubernetes/pki/admin.crt --client-key=/etc/kubernetes/pki/admin.key --embed-certs=true --kubeconfig=/etc/kubernetes/admin.kubeconfig"
    - name: "admin kubeconfig"
      shell: "kubectl config set-context default --cluster={{kconf.cluster_name}} --user=admin --kubeconfig=/etc/kubernetes/admin.kubeconfig"
    - name: "admin kubeconfig"
      shell: "kubectl config use-context default --kubeconfig=/etc/kubernetes/admin.kubeconfig"

    # kube-controller-manager kubeconfigs
    - name: "kube-controller-manager kubeconfig"
      shell: "kubectl config set-cluster {{kconf.cluster_name}} --certificate-authority=/etc/kubernetes/pki/ca.crt --embed-certs=true --server=https://{{kconf.api_endpoint}}:6443 --kubeconfig=/etc/kubernetes/kube-controller-manager.kubeconfig"
    - name: "kube-controller-manager kubeconfig"
      shell: "kubectl config set-credentials system:kube-controller-manager --client-certificate=/etc/kubernetes/pki/kube-controller-manager.crt --client-key=/etc/kubernetes/pki/kube-controller-manager.key --embed-certs=true --kubeconfig=/etc/kubernetes/kube-controller-manager.kubeconfig"
    - name: "kube-controller-manager kubeconfig"
      shell: "kubectl config set-context default --cluster={{kconf.cluster_name}} --user=system:kube-controller-manager --kubeconfig=/etc/kubernetes/kube-controller-manager.kubeconfig"
    - name: "kube-controller-manager kubeconfig"
      shell: "kubectl config use-context default --kubeconfig=/etc/kubernetes/kube-controller-manager.kubeconfig"

     # kube-scheduler kubeconfigs
    - name: "kube-scheduler kubeconfig"
      shell: "kubectl config set-cluster {{kconf.cluster_name}} --certificate-authority=/etc/kubernetes/pki/ca.crt --embed-certs=true --server=https://{{kconf.api_endpoint}}:6443 --kubeconfig=/etc/kubernetes/kube-scheduler.kubeconfig"
    - name: "kube-scheduler kubeconfig"
      shell: "kubectl config set-credentials system:kube-scheduler --client-certificate=/etc/kubernetes/pki/kube-scheduler.crt --client-key=/etc/kubernetes/pki/kube-scheduler.key --embed-certs=true --kubeconfig=/etc/kubernetes/kube-scheduler.kubeconfig"
    - name: "kube-scheduler kubeconfig"
      shell: "kubectl config set-context default --cluster={{kconf.cluster_name}} --user=system:kube-scheduler --kubeconfig=/etc/kubernetes/kube-scheduler.kubeconfig"
    - name: "kube-scheduler kubeconfig"
      shell: "kubectl config use-context default --kubeconfig=/etc/kubernetes/kube-scheduler.kubeconfig"

    # encryption-config file
    - name: "check encryption-config"
      stat:
        path: "/etc/kubernetes/manifests/encryption-config.yaml"
      register: has_encryption_config
    - name: "Copy encryption-config file"
      copy:
        src: "../resources/encryption-config.yaml"
        dest: "/etc/kubernetes/manifests"
      when: not has_encryption_config.stat.exists
    - name: "generate encryption key"
      shell: "head -c 32 /dev/urandom | base64"
      register: enckey
    - name: "replace encryption key"
      replace:
        path: "/etc/kubernetes/manifests/encryption-config.yaml"
        regexp: "{ENCRYPTION_KEY}"
        replace: "{{enckey.stdout}}"

    # fix permissions
    - name: "fix permissions"
      file:
        path: "/etc/etcd/pki"
        owner: etcd
        group: etcd
        recurse: yes
    - name: "fix permissions"
      file:
        path: "/var/lib/etcd"
        mode: 0700

    - name: "fix permissions"
      file:
        path: "{{item.path}}"
        owner: kube-apiserver
        group: kube-apiserver
      with_items:
        - {"path":"/etc/kubernetes/pki/kube-apiserver.crt"}
        - {"path":"/etc/kubernetes/pki/kube-apiserver.key"}
        - {"path":"/etc/kubernetes/pki/kube-apiserver.csr"}
    - name: "fix permissions"
      file:
        path: "{{item.path}}"
        owner: kube-controller-manager
        group: kube-controller-manager
      with_items:
        - {"path":"/etc/kubernetes/pki/kube-controller-manager.crt"}
        - {"path":"/etc/kubernetes/pki/kube-controller-manager.key"}
        - {"path":"/etc/kubernetes/pki/kube-controller-manager.csr"}
        - {"path":"/etc/kubernetes/kube-controller-manager.kubeconfig"}
    - name: "fix permissions"
      file:
        path: "{{item.path}}"
        owner: kube-scheduler
        group: kube-scheduler
      with_items:
        - {"path":"/etc/kubernetes/pki/kube-scheduler.crt"}
        - {"path":"/etc/kubernetes/pki/kube-scheduler.key"}
        - {"path":"/etc/kubernetes/pki/kube-scheduler.csr"}
        - {"path":"/etc/kubernetes/kube-scheduler.kubeconfig"}

    - name: "var run"
      file:
        path: "/var/run/kubernetes"
        owner: kube-apiserver
        group: kube-apiserver
        state: directory

    # enable services
    - name: "Enable kube-apiserver service"
      service:
        name: kube-apiserver
        enabled: yes

    - name: "Enable kube-controller-manager service"
      service:
        name: kube-controller-manager
        enabled: yes

    - name: "Enable kube-scheduler service"
      service:
        name: kube-scheduler
        enabled: yes

    - name: "Enable etcd service"
      service:
        name: etcd
        enabled: yes



